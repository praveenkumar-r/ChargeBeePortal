var cbPortal=angular.module("cbportal",["ui.router"]);cbPortal.config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/home"),$stateProvider.state("home",{url:"/home",templateUrl:resource+"partials/home.html",controller:"homeController"}).state("account",{url:"/account",templateUrl:resource+"partials/accountInfo.html",controller:"accountInfoController"}).state("billing",{url:"/billing",templateUrl:resource+"partials/billingInfo.html",controller:"billingInfoController"}).state("billinghistory",{url:"/billinghistory",templateUrl:resource+"partials/billingHistoryInfo.html",controller:"billingHistoryInfoController"})}]),cbPortal.controller("accountInfoController",["$scope","serviceManager","$rootScope","customerService","$location",function($scope,serviceManager,$rootScope,customerService,$location){$scope.customers=!1,$scope.accountInfo=!0,function(){serviceManager.callBackend("GET","/customers").then(function(data){$scope.customers=data.list}).catch(function(response){console.log(response.status)})}(),$scope.showDetailedInfo=function(inp){customerService.customeradd(inp),$rootScope.customerSelected=inp.id,$scope.selectedCustomer=inp,$scope.toggleAccountView()},$scope.toggleAccountView=function(){$scope.accountInfo=!$scope.accountInfo},$scope.updateCustomer=function(){var inp={first_name:$scope.selectedCustomer.first_name,last_name:$scope.selectedCustomer.last_name,email:$scope.selectedCustomer.email,id:$scope.selectedCustomer.id};serviceManager.callBackend("POST","/customers",inp).then(function(data){alert("Customer Updated Succefully!!"),$location.path("/home")}).catch(function(response){console.log(response.status)})}}]),cbPortal.controller("billingInfoController",["$scope","serviceManager","customerService","$location",function($scope,serviceManager,customerService,$location){$scope.billingInfo=!0,$scope.selectedCustomeraddress=customerService.customerlist().billing_address,$scope.toggleBilingView=function(){$scope.billingInfo=!$scope.billingInfo},$scope.updateBillingAddress=function(){var inp={billing_address:{id:customerService.customerlist().id,first_name:$scope.selectedCustomeraddress.first_name,last_name:$scope.selectedCustomeraddress.last_name,line1:$scope.selectedCustomeraddress.line1,line2:$scope.selectedCustomeraddress.line2,city:$scope.selectedCustomeraddress.city,state:$scope.selectedCustomeraddress.state,zip:$scope.selectedCustomeraddress.zip,country:$scope.selectedCustomeraddress.country}};serviceManager.callBackend("POST","/customerAddress",inp).then(function(data){alert("Customer Details Updated Succefully!!"),$location.path("/home")}).catch(function(response){console.log(response.status)})}}]),cbPortal.controller("homeController",["$scope","$rootScope","$location",function($scope,$rootScope,$location){$scope.changeview=function(path){void 0==$rootScope.customerSelected?alert("Please select a customer from Account Information"):$location.path(path)}}]),cbPortal.controller("billingHistoryInfoController",["$scope","serviceManager","$rootScope","customerService","$location",function($scope,serviceManager,$rootScope,customerService,$location){$scope.invoices=!1,$scope.selInvoices=[],$scope.offset=0,$scope.limit=3,$scope.loadData=function(){if($scope.offset<=$scope.invoices.length){var InvoiceCopy=angular.copy($scope.invoices),partialData=InvoiceCopy.splice($scope.offset,$scope.limit);$scope.selInvoices=$scope.selInvoices.concat(partialData),$scope.offset=$scope.offset+3}else $scope.loaded=!0},function(){serviceManager.callBackend("POST","/listInvoices").then(function(data){$scope.invoices=data.list,$scope.loadData()}).catch(function(response){console.log(response.status)})}()}]),cbPortal.service("customerService",[function(){this.customer={},this.customeradd=function(inp){this.customer=inp},this.customerlist=function(){return this.customer}}]),cbPortal.directive("whenScrolled",function(){return{restrict:"A",link:function(scope,elem,attrs){raw=elem[0],angular.element(raw).bind("scroll",function(){if(raw.scrollTop+raw.offsetHeight>=raw.scrollHeight){if(scope.loaded)return;scope.$apply(attrs.whenScrolled)}})}}}),cbPortal.factory("serviceManager",["$http","$q",function($http,$q){return{callBackend:function(methodType,urlMethod,data){var deferred=$q.defer();return $http({method:methodType,url:"http://localhost:3000/api"+urlMethod,data:data}).then(function(response){deferred.resolve(response.data)}).catch(function(response){deferred.reject(response)}),deferred.promise}}}]);